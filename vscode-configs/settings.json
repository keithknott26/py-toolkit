{
  "terminal.integrated.fontSize": 14,

  "workbench.iconTheme": "material-icon-theme",
  "workbench.startupEditor": "newUntitledFile",

  "polacode.backgroundColor": "#6633CC",
  
  "editor.tabSize": 2,
  "editor.fontSize": 13,
  "editor.lineHeight": 26,
  "editor.fontFamily": "Source Code Pro",
  "terminal.integrated.shell.linux": "/bin/zsh",
  "editor.fontLigatures": true,
  "editor.semanticHighlighting.enabled": true,

  // Controls if quick suggestions should show up while typing
  "editor.quickSuggestions": {
    "other": true,
    "comments": false,
    "strings": false
  },
  // Controls whether suggestions should be accepted on commit characters. For example, in JavaScript, the semi-colon (`;`) can be a commit character that accepts a suggestion and types that character.
  "editor.acceptSuggestionOnCommitCharacter": true,
  // Controls if suggestions should be accepted on 'Enter' - in addition to 'Tab'. Helps to avoid ambiguity between inserting new lines or accepting suggestions. The value 'smart' means only accept a suggestion with Enter when it makes a textual change
  "editor.acceptSuggestionOnEnter": "on",
  // Controls the delay in ms after which quick suggestions will show up.
  "editor.quickSuggestionsDelay": 5,
  // Controls if suggestions should automatically show up when typing trigger characters
  "editor.suggestOnTriggerCharacters": true,
  // Controls if pressing tab inserts the best suggestion and if tab cycles through other suggestions
  "editor.tabCompletion": "on",
  // Controls whether sorting favours words that appear close to the cursor
  "editor.suggest.localityBonus": true,
  // Controls how suggestions are pre-selected when showing the suggest list
  "editor.suggestSelection": "recentlyUsed",
  // Enable word based suggestions
  "editor.wordBasedSuggestions": true,
  // Enable parameter hints
  "editor.parameterHints.enabled": true,

  "explorer.compactFolders": false,
  "editor.renderLineHighlight": "gutter",
  "workbench.editor.labelFormat": "short",
  "extensions.ignoreRecommendations": false,

  "breadcrumbs.enabled": true,
  "editor.parameterHints.enabled": false,
  "explorer.confirmDragAndDrop": false,
  "explorer.confirmDelete": false,
  
  "editor.rulers": [80, 120],
  
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": true
  },

  "files.exclude": {
    "**/.git": true,
    "**/.svn": true,
    "**/.hg": true,
    "**/CVS": true,
    "**/.DS_Store": true,
    // "**/node_modules": true
  },

  "[prisma]": {
    "editor.formatOnSave": true
  },

  "files.associations": {
    ".sequelizerc": "javascript",
    ".stylelintrc": "json",
    ".prettierrc": "json",
    "*.tsx": "typescriptreact",
    ".env.*": "dotenv"
  },

  "markdown.styles": ["file:///Users/kknott/Developer/keithknott26/py-toolkit/vscode-configs/github.markdown.css"],

  "emmet.syntaxProfiles": { "javascript": "jsx" },
  "emmet.includeLanguages": { "javascript": "javascriptreact" },

  
  "gitlens.codeLens.recentChange.enabled": false,
  "gitlens.codeLens.authors.enabled": false,
  "gitlens.codeLens.enabled": false,

  "git.enableSmartCommit": true,
  "terminal.integrated.shell.osx": "/bin/zsh",
  "liveshare.featureSet": "insiders", 

  "typescript.tsserver.log": "off",
  "javascript.suggest.autoImports": true,
  "typescript.suggest.autoImports": true,
  "material-icon-theme.activeIconPack": "nest",
  "screencastMode.onlyKeyboardShortcuts": true,

  "material-icon-theme.folders.associations": {
    "infra": "app",
    "entities": "class",
    "domain": "class",
    "schemas": "class",
    "typeorm": "database",
    "repositories": "mappings",
    "http": "container",
    "migrations": "tools",
    "modules": "components",
    "implementations": "core",
    "dtos": "typescript",
    "fakes": "mock",
    "websockets": "pipe",
    "protos": "pipe",
    "grpc": "pipe",
    "providers": "include",
    "subscribers": "messages",
    "useCases": "controller",
    "kafka": "scripts",
    "mappers": "meta",
    "_shared": "shared",
    "eslint-config": "tools",
    "kube": "kubernetes"
  },

  "material-icon-theme.files.associations": {
    "ormconfig.json": "database",
    "tsconfig.json": "tune",
    "*.proto": "3d",
    "*.webpack.js": "webpack"
  },

  "material-icon-theme.languages.associations": {
    "dotenv": "tune"
  },

  "workbench.colorTheme": "Sublime Material Theme - Dark",
  "window.menuBarVisibility": "toggle",
  "typescript.updateImportsOnFileMove.enabled": "never",
  "tabnine.experimentalAutoImports": true,
  "cSpell.enableFiletypes": [
    "!asciidoc",
    "!c",
    "!cpp",
    "!csharp",
    "!go",
    "!handlebars",
    "!haskell",
    "!jade",
    "!java",
    "!latex",
    "!php",
    "!pug",
    "!python",
    "!restructuredtext",
    "!rust",
    "!scala",
    "!scss"
  ],
  "cSpell.language": "en,pt",
  "editor.suggestSelection": "first",
  "codesnap.backgroundColor": "transparent",
  "codesnap.transparentBackground": true,
  "codesnap.boxShadow": "0 0 0",
  "liveServer.settings.donotVerifyTags": true,
  "cSpell.userWords": [
    "chakra",
    "middlewares",
    "prefetch",
    "rocketseat",
    "upsert"
  ],
  "javascript.updateImportsOnFileMove.enabled": "always",
  "workbench.productIconTheme": "fluent-icons",
  "terminal.integrated.showExitAlert": false,

  "splitHTMLAttributes.closingBracketOnNewLine": true,
  "todo-tree.general.tags": [
    "BUG",
    "HACK",
    "FIXME",
    "TODO",
    "XXX",
    "[ ]",
    "[x]"
  ],
  "todo-tree.regex.regex": "(//|#|<!--|;|/\\*|^|^\\s*(-|\\d+.))\\s*($TAGS)",
  "security.workspace.trust.untrustedFiles": "newWindow",
  "window.zoomLevel": 0
}